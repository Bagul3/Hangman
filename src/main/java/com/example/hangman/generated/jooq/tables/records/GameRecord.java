/*
 * This file is generated by jOOQ.
 */
package com.example.hangman.generated.jooq.tables.records;


import com.example.hangman.generated.jooq.tables.Game;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GameRecord extends UpdatableRecordImpl<GameRecord> implements Record8<Integer, String[], Integer, Integer, String, Timestamp, Timestamp, Timestamp> {

    private static final long serialVersionUID = -1124048614;

    /**
     * Setter for <code>public.game.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.game.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.game.guessed_letters</code>.
     */
    public void setGuessedLetters(String... value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.game.guessed_letters</code>.
     */
    public String[] getGuessedLetters() {
        return (String[]) get(1);
    }

    /**
     * Setter for <code>public.game.number_of_guesses_allowed</code>.
     */
    public void setNumberOfGuessesAllowed(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.game.number_of_guesses_allowed</code>.
     */
    public Integer getNumberOfGuessesAllowed() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.game.number_of_guesses</code>.
     */
    public void setNumberOfGuesses(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.game.number_of_guesses</code>.
     */
    public Integer getNumberOfGuesses() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.game.word</code>.
     */
    public void setWord(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.game.word</code>.
     */
    public String getWord() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.game.start_time</code>.
     */
    public void setStartTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.game.start_time</code>.
     */
    public Timestamp getStartTime() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>public.game.end_time</code>.
     */
    public void setEndTime(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.game.end_time</code>.
     */
    public Timestamp getEndTime() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>public.game.last_updated</code>.
     */
    public void setLastUpdated(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.game.last_updated</code>.
     */
    public Timestamp getLastUpdated() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String[], Integer, Integer, String, Timestamp, Timestamp, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String[], Integer, Integer, String, Timestamp, Timestamp, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Game.GAME.ID;
    }

    @Override
    public Field<String[]> field2() {
        return Game.GAME.GUESSED_LETTERS;
    }

    @Override
    public Field<Integer> field3() {
        return Game.GAME.NUMBER_OF_GUESSES_ALLOWED;
    }

    @Override
    public Field<Integer> field4() {
        return Game.GAME.NUMBER_OF_GUESSES;
    }

    @Override
    public Field<String> field5() {
        return Game.GAME.WORD;
    }

    @Override
    public Field<Timestamp> field6() {
        return Game.GAME.START_TIME;
    }

    @Override
    public Field<Timestamp> field7() {
        return Game.GAME.END_TIME;
    }

    @Override
    public Field<Timestamp> field8() {
        return Game.GAME.LAST_UPDATED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String[] component2() {
        return getGuessedLetters();
    }

    @Override
    public Integer component3() {
        return getNumberOfGuessesAllowed();
    }

    @Override
    public Integer component4() {
        return getNumberOfGuesses();
    }

    @Override
    public String component5() {
        return getWord();
    }

    @Override
    public Timestamp component6() {
        return getStartTime();
    }

    @Override
    public Timestamp component7() {
        return getEndTime();
    }

    @Override
    public Timestamp component8() {
        return getLastUpdated();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String[] value2() {
        return getGuessedLetters();
    }

    @Override
    public Integer value3() {
        return getNumberOfGuessesAllowed();
    }

    @Override
    public Integer value4() {
        return getNumberOfGuesses();
    }

    @Override
    public String value5() {
        return getWord();
    }

    @Override
    public Timestamp value6() {
        return getStartTime();
    }

    @Override
    public Timestamp value7() {
        return getEndTime();
    }

    @Override
    public Timestamp value8() {
        return getLastUpdated();
    }

    @Override
    public GameRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public GameRecord value2(String... value) {
        setGuessedLetters(value);
        return this;
    }

    @Override
    public GameRecord value3(Integer value) {
        setNumberOfGuessesAllowed(value);
        return this;
    }

    @Override
    public GameRecord value4(Integer value) {
        setNumberOfGuesses(value);
        return this;
    }

    @Override
    public GameRecord value5(String value) {
        setWord(value);
        return this;
    }

    @Override
    public GameRecord value6(Timestamp value) {
        setStartTime(value);
        return this;
    }

    @Override
    public GameRecord value7(Timestamp value) {
        setEndTime(value);
        return this;
    }

    @Override
    public GameRecord value8(Timestamp value) {
        setLastUpdated(value);
        return this;
    }

    @Override
    public GameRecord values(Integer value1, String[] value2, Integer value3, Integer value4, String value5, Timestamp value6, Timestamp value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GameRecord
     */
    public GameRecord() {
        super(Game.GAME);
    }

    /**
     * Create a detached, initialised GameRecord
     */
    public GameRecord(Integer id, String[] guessedLetters, Integer numberOfGuessesAllowed, Integer numberOfGuesses, String word, Timestamp startTime, Timestamp endTime, Timestamp lastUpdated) {
        super(Game.GAME);

        set(0, id);
        set(1, guessedLetters);
        set(2, numberOfGuessesAllowed);
        set(3, numberOfGuesses);
        set(4, word);
        set(5, startTime);
        set(6, endTime);
        set(7, lastUpdated);
    }
}
